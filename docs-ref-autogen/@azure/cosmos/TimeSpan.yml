### YamlMime:UniversalReference
items:
  - uid: '@azure/cosmos.TimeSpan'
    name: TimeSpan
    fullName: TimeSpan
    children:
      - '@azure/cosmos.TimeSpan.add'
      - '@azure/cosmos.TimeSpan.additionDoesOverflow'
      - '@azure/cosmos.TimeSpan.compare'
      - '@azure/cosmos.TimeSpan.compareTo'
      - '@azure/cosmos.TimeSpan.days'
      - '@azure/cosmos.TimeSpan.duration'
      - '@azure/cosmos.TimeSpan.equals'
      - '@azure/cosmos.TimeSpan.fromDays'
      - '@azure/cosmos.TimeSpan.fromHours'
      - '@azure/cosmos.TimeSpan.fromMilliseconds'
      - '@azure/cosmos.TimeSpan.fromMinutes'
      - '@azure/cosmos.TimeSpan.fromSeconds'
      - '@azure/cosmos.TimeSpan.fromTicks'
      - '@azure/cosmos.TimeSpan.hours'
      - '@azure/cosmos.TimeSpan.interval'
      - '@azure/cosmos.TimeSpan.isTimeSpan'
      - '@azure/cosmos.TimeSpan.maxValue'
      - '@azure/cosmos.TimeSpan.milliseconds'
      - '@azure/cosmos.TimeSpan.minValue'
      - '@azure/cosmos.TimeSpan.negate'
      - '@azure/cosmos.TimeSpan.seconds'
      - '@azure/cosmos.TimeSpan.subtract'
      - '@azure/cosmos.TimeSpan.subtractionDoesUnderflow'
      - '@azure/cosmos.TimeSpan.ticks'
      - '@azure/cosmos.TimeSpan.constructor'
      - '@azure/cosmos.TimeSpan.totalDays'
      - '@azure/cosmos.TimeSpan.totalHours'
      - '@azure/cosmos.TimeSpan.totalMilliseconds'
      - '@azure/cosmos.TimeSpan.totalMinutes'
      - '@azure/cosmos.TimeSpan.totalSeconds'
      - '@azure/cosmos.TimeSpan.zero'
    langs:
      - typeScript
    type: class
    summary: Represents a time interval.
    package: '@azure/cosmos'
  - uid: '@azure/cosmos.TimeSpan.add'
    name: add
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Returns a new TimeSpan object whose value is the sum of the specified
      TimeSpan object and this instance.
    syntax:
      content: 'function add(ts: TimeSpan)'
      parameters:
        - id: ts
          type:
            - '@azure/cosmos.TimeSpan'
          description: The time interval to add.
      return:
        type:
          - '@azure/cosmos.TimeSpan'
    package: '@azure/cosmos'
  - uid: '@azure/cosmos.TimeSpan.additionDoesOverflow'
    name: additionDoesOverflow
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'static function additionDoesOverflow(a: number, b: number)'
      parameters:
        - id: a
          type:
            - number
          description: ''
        - id: b
          type:
            - number
          description: ''
      return:
        type:
          - boolean
    package: '@azure/cosmos'
  - uid: '@azure/cosmos.TimeSpan.compare'
    name: compare
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'static function compare(t1: TimeSpan, t2: TimeSpan)'
      parameters:
        - id: t1
          type:
            - '@azure/cosmos.TimeSpan'
          description: ''
        - id: t2
          type:
            - '@azure/cosmos.TimeSpan'
          description: ''
      return:
        type:
          - 0 | 1 | -1
    package: '@azure/cosmos'
  - uid: '@azure/cosmos.TimeSpan.compareTo'
    name: compareTo
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Compares this instance to a specified object and returns an integer that
      indicates whether this

      instance is shorter than, equal to, or longer than the specified object.
    syntax:
      content: 'function compareTo(value: TimeSpan)'
      parameters:
        - id: value
          type:
            - '@azure/cosmos.TimeSpan'
          description: The time interval to add.
      return:
        type:
          - 0 | 1 | -1
    package: '@azure/cosmos'
  - uid: '@azure/cosmos.TimeSpan.days'
    name: days
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function days()
      parameters: []
      return:
        type:
          - number
    package: '@azure/cosmos'
  - uid: '@azure/cosmos.TimeSpan.duration'
    name: duration
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Returns a new TimeSpan object whose value is the absolute value of the
      current TimeSpan object.
    syntax:
      content: function duration()
      parameters: []
      return:
        type:
          - '@azure/cosmos.TimeSpan'
    package: '@azure/cosmos'
  - uid: '@azure/cosmos.TimeSpan.equals'
    name: equals
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Returns a value indicating whether this instance is equal to a specified
      object.
    syntax:
      content: 'function equals(value: TimeSpan)'
      parameters:
        - id: value
          type:
            - '@azure/cosmos.TimeSpan'
          description: The time interval to check for equality.
      return:
        type:
          - boolean
    package: '@azure/cosmos'
  - uid: '@azure/cosmos.TimeSpan.fromDays'
    name: fromDays
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'static function fromDays(value: number)'
      parameters:
        - id: value
          type:
            - number
          description: ''
      return:
        type:
          - '@azure/cosmos.TimeSpan'
    package: '@azure/cosmos'
  - uid: '@azure/cosmos.TimeSpan.fromHours'
    name: fromHours
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'static function fromHours(value: number)'
      parameters:
        - id: value
          type:
            - number
          description: ''
      return:
        type:
          - '@azure/cosmos.TimeSpan'
    package: '@azure/cosmos'
  - uid: '@azure/cosmos.TimeSpan.fromMilliseconds'
    name: fromMilliseconds
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'static function fromMilliseconds(value: number)'
      parameters:
        - id: value
          type:
            - number
          description: ''
      return:
        type:
          - '@azure/cosmos.TimeSpan'
    package: '@azure/cosmos'
  - uid: '@azure/cosmos.TimeSpan.fromMinutes'
    name: fromMinutes
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'static function fromMinutes(value: number)'
      parameters:
        - id: value
          type:
            - number
          description: ''
      return:
        type:
          - '@azure/cosmos.TimeSpan'
    package: '@azure/cosmos'
  - uid: '@azure/cosmos.TimeSpan.fromSeconds'
    name: fromSeconds
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'static function fromSeconds(value: number)'
      parameters:
        - id: value
          type:
            - number
          description: ''
      return:
        type:
          - '@azure/cosmos.TimeSpan'
    package: '@azure/cosmos'
  - uid: '@azure/cosmos.TimeSpan.fromTicks'
    name: fromTicks
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'static function fromTicks(value: number)'
      parameters:
        - id: value
          type:
            - number
          description: ''
      return:
        type:
          - '@azure/cosmos.TimeSpan'
    package: '@azure/cosmos'
  - uid: '@azure/cosmos.TimeSpan.hours'
    name: hours
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function hours()
      parameters: []
      return:
        type:
          - number
    package: '@azure/cosmos'
  - uid: '@azure/cosmos.TimeSpan.interval'
    name: interval
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'static function interval(value: number, scale: number)'
      parameters:
        - id: value
          type:
            - number
          description: ''
        - id: scale
          type:
            - number
          description: ''
      return:
        type:
          - '@azure/cosmos.TimeSpan'
    package: '@azure/cosmos'
  - uid: '@azure/cosmos.TimeSpan.isTimeSpan'
    name: isTimeSpan
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'static function isTimeSpan(timespan: TimeSpan)'
      parameters:
        - id: timespan
          type:
            - '@azure/cosmos.TimeSpan'
          description: ''
      return:
        type:
          - number
    package: '@azure/cosmos'
  - uid: '@azure/cosmos.TimeSpan.maxValue'
    name: maxValue
    fullName: maxValue
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static maxValue: TimeSpan'
      return:
        type:
          - '@azure/cosmos.TimeSpan'
    package: '@azure/cosmos'
  - uid: '@azure/cosmos.TimeSpan.milliseconds'
    name: milliseconds
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function milliseconds()
      parameters: []
      return:
        type:
          - number
    package: '@azure/cosmos'
  - uid: '@azure/cosmos.TimeSpan.minValue'
    name: minValue
    fullName: minValue
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static minValue: TimeSpan'
      return:
        type:
          - '@azure/cosmos.TimeSpan'
    package: '@azure/cosmos'
  - uid: '@azure/cosmos.TimeSpan.negate'
    name: negate
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Returns a new TimeSpan object whose value is the negated value of this
      instance.
    syntax:
      content: function negate()
      parameters: []
      return:
        type:
          - '@azure/cosmos.TimeSpan'
    package: '@azure/cosmos'
  - uid: '@azure/cosmos.TimeSpan.seconds'
    name: seconds
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function seconds()
      parameters: []
      return:
        type:
          - number
    package: '@azure/cosmos'
  - uid: '@azure/cosmos.TimeSpan.subtract'
    name: subtract
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Returns a new TimeSpan object whose value is the difference of the
      specified TimeSpan object and this instance.
    syntax:
      content: 'function subtract(ts: TimeSpan)'
      parameters:
        - id: ts
          type:
            - '@azure/cosmos.TimeSpan'
          description: The time interval to subtract.
      return:
        type:
          - '@azure/cosmos.TimeSpan'
    package: '@azure/cosmos'
  - uid: '@azure/cosmos.TimeSpan.subtractionDoesUnderflow'
    name: subtractionDoesUnderflow
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'static function subtractionDoesUnderflow(a: number, b: number)'
      parameters:
        - id: a
          type:
            - number
          description: ''
        - id: b
          type:
            - number
          description: ''
      return:
        type:
          - boolean
    package: '@azure/cosmos'
  - uid: '@azure/cosmos.TimeSpan.ticks'
    name: ticks
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function ticks()
      parameters: []
      return:
        type:
          - number
    package: '@azure/cosmos'
  - uid: '@azure/cosmos.TimeSpan.constructor'
    name: TimeSpan
    children: []
    type: constructor
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        new TimeSpan(days: number, hours: number, minutes: number, seconds:
        number, milliseconds: number)
      parameters:
        - id: days
          type:
            - number
          description: ''
        - id: hours
          type:
            - number
          description: ''
        - id: minutes
          type:
            - number
          description: ''
        - id: seconds
          type:
            - number
          description: ''
        - id: milliseconds
          type:
            - number
          description: ''
    package: '@azure/cosmos'
  - uid: '@azure/cosmos.TimeSpan.totalDays'
    name: totalDays
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function totalDays()
      parameters: []
      return:
        type:
          - number
    package: '@azure/cosmos'
  - uid: '@azure/cosmos.TimeSpan.totalHours'
    name: totalHours
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function totalHours()
      parameters: []
      return:
        type:
          - number
    package: '@azure/cosmos'
  - uid: '@azure/cosmos.TimeSpan.totalMilliseconds'
    name: totalMilliseconds
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function totalMilliseconds()
      parameters: []
      return:
        type:
          - number
    package: '@azure/cosmos'
  - uid: '@azure/cosmos.TimeSpan.totalMinutes'
    name: totalMinutes
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function totalMinutes()
      parameters: []
      return:
        type:
          - number
    package: '@azure/cosmos'
  - uid: '@azure/cosmos.TimeSpan.totalSeconds'
    name: totalSeconds
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function totalSeconds()
      parameters: []
      return:
        type:
          - number
    package: '@azure/cosmos'
  - uid: '@azure/cosmos.TimeSpan.zero'
    name: zero
    fullName: zero
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static zero: TimeSpan'
      return:
        type:
          - '@azure/cosmos.TimeSpan'
    package: '@azure/cosmos'
references:
  - uid: '@azure/cosmos.TimeSpan'
    spec.typeScript:
      - name: TimeSpan
        fullName: TimeSpan
        uid: '@azure/cosmos.TimeSpan'
