### YamlMime:UniversalReference
items:
  - uid: azure-arm-containerregistry.Registries
    name: Registries
    fullName: Registries
    children:
      - azure-arm-containerregistry.Registries.beginCreate
      - azure-arm-containerregistry.Registries.beginCreate_1
      - azure-arm-containerregistry.Registries.beginCreate_2
      - >-
        azure-arm-containerregistry.Registries.beginCreateWithHttpOperationResponse
      - azure-arm-containerregistry.Registries.beginDeleteMethod
      - azure-arm-containerregistry.Registries.beginDeleteMethod_1
      - azure-arm-containerregistry.Registries.beginDeleteMethod_2
      - >-
        azure-arm-containerregistry.Registries.beginDeleteMethodWithHttpOperationResponse
      - azure-arm-containerregistry.Registries.beginImportImage_1
      - azure-arm-containerregistry.Registries.beginImportImage_2
      - azure-arm-containerregistry.Registries.beginImportImage
      - >-
        azure-arm-containerregistry.Registries.beginImportImageWithHttpOperationResponse
      - azure-arm-containerregistry.Registries.beginUpdate
      - azure-arm-containerregistry.Registries.beginUpdate_1
      - azure-arm-containerregistry.Registries.beginUpdate_2
      - >-
        azure-arm-containerregistry.Registries.beginUpdateWithHttpOperationResponse
      - azure-arm-containerregistry.Registries.checkNameAvailability_1
      - azure-arm-containerregistry.Registries.checkNameAvailability
      - azure-arm-containerregistry.Registries.checkNameAvailability_2
      - >-
        azure-arm-containerregistry.Registries.checkNameAvailabilityWithHttpOperationResponse
      - azure-arm-containerregistry.Registries.create_1
      - azure-arm-containerregistry.Registries.create
      - azure-arm-containerregistry.Registries.create_2
      - azure-arm-containerregistry.Registries.createWithHttpOperationResponse
      - azure-arm-containerregistry.Registries.deleteMethod_1
      - azure-arm-containerregistry.Registries.deleteMethod_2
      - azure-arm-containerregistry.Registries.deleteMethod
      - >-
        azure-arm-containerregistry.Registries.deleteMethodWithHttpOperationResponse
      - azure-arm-containerregistry.Registries.get
      - azure-arm-containerregistry.Registries.get_1
      - azure-arm-containerregistry.Registries.get_2
      - azure-arm-containerregistry.Registries.getWithHttpOperationResponse
      - azure-arm-containerregistry.Registries.importImage
      - azure-arm-containerregistry.Registries.importImage_1
      - azure-arm-containerregistry.Registries.importImage_2
      - >-
        azure-arm-containerregistry.Registries.importImageWithHttpOperationResponse
      - azure-arm-containerregistry.Registries.list
      - azure-arm-containerregistry.Registries.list_2
      - azure-arm-containerregistry.Registries.list_1
      - azure-arm-containerregistry.Registries.listByResourceGroup_1
      - azure-arm-containerregistry.Registries.listByResourceGroup
      - azure-arm-containerregistry.Registries.listByResourceGroup_2
      - azure-arm-containerregistry.Registries.listByResourceGroupNext_1
      - azure-arm-containerregistry.Registries.listByResourceGroupNext_2
      - azure-arm-containerregistry.Registries.listByResourceGroupNext
      - >-
        azure-arm-containerregistry.Registries.listByResourceGroupNextWithHttpOperationResponse
      - >-
        azure-arm-containerregistry.Registries.listByResourceGroupWithHttpOperationResponse
      - azure-arm-containerregistry.Registries.listCredentials
      - azure-arm-containerregistry.Registries.listCredentials_1
      - azure-arm-containerregistry.Registries.listCredentials_2
      - >-
        azure-arm-containerregistry.Registries.listCredentialsWithHttpOperationResponse
      - azure-arm-containerregistry.Registries.listNext
      - azure-arm-containerregistry.Registries.listNext_1
      - azure-arm-containerregistry.Registries.listNext_2
      - azure-arm-containerregistry.Registries.listNextWithHttpOperationResponse
      - azure-arm-containerregistry.Registries.listUsages_1
      - azure-arm-containerregistry.Registries.listUsages_2
      - azure-arm-containerregistry.Registries.listUsages
      - >-
        azure-arm-containerregistry.Registries.listUsagesWithHttpOperationResponse
      - azure-arm-containerregistry.Registries.listWithHttpOperationResponse
      - azure-arm-containerregistry.Registries.regenerateCredential
      - azure-arm-containerregistry.Registries.regenerateCredential_1
      - azure-arm-containerregistry.Registries.regenerateCredential_2
      - >-
        azure-arm-containerregistry.Registries.regenerateCredentialWithHttpOperationResponse
      - azure-arm-containerregistry.Registries.update
      - azure-arm-containerregistry.Registries.update_1
      - azure-arm-containerregistry.Registries.update_2
      - azure-arm-containerregistry.Registries.updateWithHttpOperationResponse
    langs:
      - typeScript
    type: interface
    summary: ''
    package: azure-arm-containerregistry
  - uid: azure-arm-containerregistry.Registries.beginCreate
    name: beginCreate
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates a container registry with the specified parameters.
    syntax:
      content: >-
        function beginCreate(resourceGroupName: string, registryName: string,
        registry: Registry, options?: function)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group to which
            the container registry belongs.
        - id: registryName
          type:
            - string
          description: |
            The name of the container registry.
        - id: registry
          type:
            - azure-arm-containerregistry.Registry
          description: |
            The parameters for creating a container registry.
        - id: options
          type:
            - function
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-containerregistry.Registry>
    package: azure-arm-containerregistry
  - uid: azure-arm-containerregistry.Registries.beginCreate_1
    name: beginCreate
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates a container registry with the specified parameters.
    syntax:
      content: >-
        function beginCreate(resourceGroupName: string, registryName: string,
        registry: Registry, callback: ServiceCallback<Registry>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: registryName
          type:
            - string
          description: ''
        - id: registry
          type:
            - azure-arm-containerregistry.Registry
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-containerregistry.Registry>
          description: ''
      return:
        type:
          - Promise<azure-arm-containerregistry.Registry>
    package: azure-arm-containerregistry
  - uid: azure-arm-containerregistry.Registries.beginCreate_2
    name: beginCreate
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates a container registry with the specified parameters.
    syntax:
      content: >-
        function beginCreate(resourceGroupName: string, registryName: string,
        registry: Registry, options: function, callback:
        ServiceCallback<Registry>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: registryName
          type:
            - string
          description: ''
        - id: registry
          type:
            - azure-arm-containerregistry.Registry
          description: ''
        - id: options
          type:
            - function
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-containerregistry.Registry>
          description: ''
      return:
        type:
          - Promise<azure-arm-containerregistry.Registry>
    package: azure-arm-containerregistry
  - uid: >-
      azure-arm-containerregistry.Registries.beginCreateWithHttpOperationResponse
    name: beginCreateWithHttpOperationResponse
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates a container registry with the specified parameters.
    syntax:
      content: >-
        function beginCreateWithHttpOperationResponse(resourceGroupName: string,
        registryName: string, registry: Registry, options?: function)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group to which
            the container registry belongs.
        - id: registryName
          type:
            - string
          description: |
            The name of the container registry.
        - id: registry
          type:
            - azure-arm-containerregistry.Registry
          description: |
            The parameters for creating a container registry.
        - id: options
          type:
            - function
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-arm-containerregistry.Registry>>
    package: azure-arm-containerregistry
  - uid: azure-arm-containerregistry.Registries.beginDeleteMethod
    name: beginDeleteMethod
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes a container registry.
    syntax:
      content: >-
        function beginDeleteMethod(resourceGroupName: string, registryName:
        string, options?: function)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group to which
            the container registry belongs.
        - id: registryName
          type:
            - string
          description: |
            The name of the container registry.
        - id: options
          type:
            - function
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
    package: azure-arm-containerregistry
  - uid: azure-arm-containerregistry.Registries.beginDeleteMethod_1
    name: beginDeleteMethod
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes a container registry.
    syntax:
      content: >-
        function beginDeleteMethod(resourceGroupName: string, registryName:
        string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: registryName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-arm-containerregistry
  - uid: azure-arm-containerregistry.Registries.beginDeleteMethod_2
    name: beginDeleteMethod
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes a container registry.
    syntax:
      content: >-
        function beginDeleteMethod(resourceGroupName: string, registryName:
        string, options: function, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: registryName
          type:
            - string
          description: ''
        - id: options
          type:
            - function
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-arm-containerregistry
  - uid: >-
      azure-arm-containerregistry.Registries.beginDeleteMethodWithHttpOperationResponse
    name: beginDeleteMethodWithHttpOperationResponse
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes a container registry.
    syntax:
      content: >-
        function beginDeleteMethodWithHttpOperationResponse(resourceGroupName:
        string, registryName: string, options?: function)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group to which
            the container registry belongs.
        - id: registryName
          type:
            - string
          description: |
            The name of the container registry.
        - id: options
          type:
            - function
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
    package: azure-arm-containerregistry
  - uid: azure-arm-containerregistry.Registries.beginImportImage_1
    name: beginImportImage
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Copies an image to this container registry from the specified container
      registry.
    syntax:
      content: >-
        function beginImportImage(resourceGroupName: string, registryName:
        string, parameters: ImportImageParameters, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: registryName
          type:
            - string
          description: ''
        - id: parameters
          type:
            - azure-arm-containerregistry.ImportImageParameters
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-arm-containerregistry
  - uid: azure-arm-containerregistry.Registries.beginImportImage_2
    name: beginImportImage
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Copies an image to this container registry from the specified container
      registry.
    syntax:
      content: >-
        function beginImportImage(resourceGroupName: string, registryName:
        string, parameters: ImportImageParameters, options: function, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: registryName
          type:
            - string
          description: ''
        - id: parameters
          type:
            - azure-arm-containerregistry.ImportImageParameters
          description: ''
        - id: options
          type:
            - function
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-arm-containerregistry
  - uid: azure-arm-containerregistry.Registries.beginImportImage
    name: beginImportImage
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Copies an image to this container registry from the specified container
      registry.
    syntax:
      content: >-
        function beginImportImage(resourceGroupName: string, registryName:
        string, parameters: ImportImageParameters, options?: function)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group to which
            the container registry belongs.
        - id: registryName
          type:
            - string
          description: |
            The name of the container registry.
        - id: parameters
          type:
            - azure-arm-containerregistry.ImportImageParameters
          description: |
            The parameters specifying the image to copy and
            the source container registry.
        - id: options
          type:
            - function
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
    package: azure-arm-containerregistry
  - uid: >-
      azure-arm-containerregistry.Registries.beginImportImageWithHttpOperationResponse
    name: beginImportImageWithHttpOperationResponse
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Copies an image to this container registry from the specified container
      registry.
    syntax:
      content: >-
        function beginImportImageWithHttpOperationResponse(resourceGroupName:
        string, registryName: string, parameters: ImportImageParameters,
        options?: function)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group to which
            the container registry belongs.
        - id: registryName
          type:
            - string
          description: |
            The name of the container registry.
        - id: parameters
          type:
            - azure-arm-containerregistry.ImportImageParameters
          description: |
            The parameters specifying the image to copy and
            the source container registry.
        - id: options
          type:
            - function
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
    package: azure-arm-containerregistry
  - uid: azure-arm-containerregistry.Registries.beginUpdate
    name: beginUpdate
    children: []
    type: method
    langs:
      - typeScript
    summary: Updates a container registry with the specified parameters.
    syntax:
      content: >-
        function beginUpdate(resourceGroupName: string, registryName: string,
        registryUpdateParameters: RegistryUpdateParameters, options?: function)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group to which
            the container registry belongs.
        - id: registryName
          type:
            - string
          description: |
            The name of the container registry.
        - id: registryUpdateParameters
          type:
            - azure-arm-containerregistry.RegistryUpdateParameters
          description: |
            The parameters for updating a
            container registry.
        - id: options
          type:
            - function
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-containerregistry.Registry>
    package: azure-arm-containerregistry
  - uid: azure-arm-containerregistry.Registries.beginUpdate_1
    name: beginUpdate
    children: []
    type: method
    langs:
      - typeScript
    summary: Updates a container registry with the specified parameters.
    syntax:
      content: >-
        function beginUpdate(resourceGroupName: string, registryName: string,
        registryUpdateParameters: RegistryUpdateParameters, callback:
        ServiceCallback<Registry>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: registryName
          type:
            - string
          description: ''
        - id: registryUpdateParameters
          type:
            - azure-arm-containerregistry.RegistryUpdateParameters
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-containerregistry.Registry>
          description: ''
      return:
        type:
          - Promise<azure-arm-containerregistry.Registry>
    package: azure-arm-containerregistry
  - uid: azure-arm-containerregistry.Registries.beginUpdate_2
    name: beginUpdate
    children: []
    type: method
    langs:
      - typeScript
    summary: Updates a container registry with the specified parameters.
    syntax:
      content: >-
        function beginUpdate(resourceGroupName: string, registryName: string,
        registryUpdateParameters: RegistryUpdateParameters, options: function,
        callback: ServiceCallback<Registry>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: registryName
          type:
            - string
          description: ''
        - id: registryUpdateParameters
          type:
            - azure-arm-containerregistry.RegistryUpdateParameters
          description: ''
        - id: options
          type:
            - function
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-containerregistry.Registry>
          description: ''
      return:
        type:
          - Promise<azure-arm-containerregistry.Registry>
    package: azure-arm-containerregistry
  - uid: >-
      azure-arm-containerregistry.Registries.beginUpdateWithHttpOperationResponse
    name: beginUpdateWithHttpOperationResponse
    children: []
    type: method
    langs:
      - typeScript
    summary: Updates a container registry with the specified parameters.
    syntax:
      content: >-
        function beginUpdateWithHttpOperationResponse(resourceGroupName: string,
        registryName: string, registryUpdateParameters:
        RegistryUpdateParameters, options?: function)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group to which
            the container registry belongs.
        - id: registryName
          type:
            - string
          description: |
            The name of the container registry.
        - id: registryUpdateParameters
          type:
            - azure-arm-containerregistry.RegistryUpdateParameters
          description: |
            The parameters for updating a
            container registry.
        - id: options
          type:
            - function
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-arm-containerregistry.Registry>>
    package: azure-arm-containerregistry
  - uid: azure-arm-containerregistry.Registries.checkNameAvailability_1
    name: checkNameAvailability
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Checks whether the container registry name is available for use. The name

      must contain only alphanumeric characters, be globally unique, and between
      5

      and 50 characters in length.
    syntax:
      content: >-
        function checkNameAvailability(registryNameCheckRequest:
        RegistryNameCheckRequest, callback: ServiceCallback<RegistryNameStatus>)
      parameters:
        - id: registryNameCheckRequest
          type:
            - azure-arm-containerregistry.RegistryNameCheckRequest
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-containerregistry.RegistryNameStatus>
          description: ''
      return:
        type:
          - Promise<azure-arm-containerregistry.RegistryNameStatus>
    package: azure-arm-containerregistry
  - uid: azure-arm-containerregistry.Registries.checkNameAvailability
    name: checkNameAvailability
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Checks whether the container registry name is available for use. The name

      must contain only alphanumeric characters, be globally unique, and between
      5

      and 50 characters in length.
    syntax:
      content: >-
        function checkNameAvailability(registryNameCheckRequest:
        RegistryNameCheckRequest, options?: function)
      parameters:
        - id: registryNameCheckRequest
          type:
            - azure-arm-containerregistry.RegistryNameCheckRequest
          description: |
            The object containing information
            for the availability request.
        - id: options
          type:
            - function
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-containerregistry.RegistryNameStatus>
    package: azure-arm-containerregistry
  - uid: azure-arm-containerregistry.Registries.checkNameAvailability_2
    name: checkNameAvailability
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Checks whether the container registry name is available for use. The name

      must contain only alphanumeric characters, be globally unique, and between
      5

      and 50 characters in length.
    syntax:
      content: >-
        function checkNameAvailability(registryNameCheckRequest:
        RegistryNameCheckRequest, options: function, callback:
        ServiceCallback<RegistryNameStatus>)
      parameters:
        - id: registryNameCheckRequest
          type:
            - azure-arm-containerregistry.RegistryNameCheckRequest
          description: ''
        - id: options
          type:
            - function
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-containerregistry.RegistryNameStatus>
          description: ''
      return:
        type:
          - Promise<azure-arm-containerregistry.RegistryNameStatus>
    package: azure-arm-containerregistry
  - uid: >-
      azure-arm-containerregistry.Registries.checkNameAvailabilityWithHttpOperationResponse
    name: checkNameAvailabilityWithHttpOperationResponse
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Checks whether the container registry name is available for use. The name

      must contain only alphanumeric characters, be globally unique, and between
      5

      and 50 characters in length.
    syntax:
      content: >-
        function
        checkNameAvailabilityWithHttpOperationResponse(registryNameCheckRequest:
        RegistryNameCheckRequest, options?: function)
      parameters:
        - id: registryNameCheckRequest
          type:
            - azure-arm-containerregistry.RegistryNameCheckRequest
          description: |
            The object containing information
            for the availability request.
        - id: options
          type:
            - function
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-arm-containerregistry.RegistryNameStatus>>
    package: azure-arm-containerregistry
  - uid: azure-arm-containerregistry.Registries.create_1
    name: create
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates a container registry with the specified parameters.
    syntax:
      content: >-
        function create(resourceGroupName: string, registryName: string,
        registry: Registry, callback: ServiceCallback<Registry>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: registryName
          type:
            - string
          description: ''
        - id: registry
          type:
            - azure-arm-containerregistry.Registry
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-containerregistry.Registry>
          description: ''
      return:
        type:
          - Promise<azure-arm-containerregistry.Registry>
    package: azure-arm-containerregistry
  - uid: azure-arm-containerregistry.Registries.create
    name: create
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates a container registry with the specified parameters.
    syntax:
      content: >-
        function create(resourceGroupName: string, registryName: string,
        registry: Registry, options?: function)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group to which
            the container registry belongs.
        - id: registryName
          type:
            - string
          description: |
            The name of the container registry.
        - id: registry
          type:
            - azure-arm-containerregistry.Registry
          description: |
            The parameters for creating a container registry.
        - id: options
          type:
            - function
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-containerregistry.Registry>
    package: azure-arm-containerregistry
  - uid: azure-arm-containerregistry.Registries.create_2
    name: create
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates a container registry with the specified parameters.
    syntax:
      content: >-
        function create(resourceGroupName: string, registryName: string,
        registry: Registry, options: function, callback:
        ServiceCallback<Registry>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: registryName
          type:
            - string
          description: ''
        - id: registry
          type:
            - azure-arm-containerregistry.Registry
          description: ''
        - id: options
          type:
            - function
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-containerregistry.Registry>
          description: ''
      return:
        type:
          - Promise<azure-arm-containerregistry.Registry>
    package: azure-arm-containerregistry
  - uid: azure-arm-containerregistry.Registries.createWithHttpOperationResponse
    name: createWithHttpOperationResponse
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates a container registry with the specified parameters.
    syntax:
      content: >-
        function createWithHttpOperationResponse(resourceGroupName: string,
        registryName: string, registry: Registry, options?: function)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group to which
            the container registry belongs.
        - id: registryName
          type:
            - string
          description: |
            The name of the container registry.
        - id: registry
          type:
            - azure-arm-containerregistry.Registry
          description: |
            The parameters for creating a container registry.
        - id: options
          type:
            - function
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-arm-containerregistry.Registry>>
    package: azure-arm-containerregistry
  - uid: azure-arm-containerregistry.Registries.deleteMethod_1
    name: deleteMethod
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes a container registry.
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, registryName: string,
        callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: registryName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-arm-containerregistry
  - uid: azure-arm-containerregistry.Registries.deleteMethod_2
    name: deleteMethod
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes a container registry.
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, registryName: string,
        options: function, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: registryName
          type:
            - string
          description: ''
        - id: options
          type:
            - function
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-arm-containerregistry
  - uid: azure-arm-containerregistry.Registries.deleteMethod
    name: deleteMethod
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes a container registry.
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, registryName: string,
        options?: function)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group to which
            the container registry belongs.
        - id: registryName
          type:
            - string
          description: |
            The name of the container registry.
        - id: options
          type:
            - function
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
    package: azure-arm-containerregistry
  - uid: >-
      azure-arm-containerregistry.Registries.deleteMethodWithHttpOperationResponse
    name: deleteMethodWithHttpOperationResponse
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes a container registry.
    syntax:
      content: >-
        function deleteMethodWithHttpOperationResponse(resourceGroupName:
        string, registryName: string, options?: function)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group to which
            the container registry belongs.
        - id: registryName
          type:
            - string
          description: |
            The name of the container registry.
        - id: options
          type:
            - function
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
    package: azure-arm-containerregistry
  - uid: azure-arm-containerregistry.Registries.get
    name: get
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the properties of the specified container registry.
    syntax:
      content: >-
        function get(resourceGroupName: string, registryName: string, options?:
        function)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group to which
            the container registry belongs.
        - id: registryName
          type:
            - string
          description: |
            The name of the container registry.
        - id: options
          type:
            - function
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-containerregistry.Registry>
    package: azure-arm-containerregistry
  - uid: azure-arm-containerregistry.Registries.get_1
    name: get
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the properties of the specified container registry.
    syntax:
      content: >-
        function get(resourceGroupName: string, registryName: string, callback:
        ServiceCallback<Registry>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: registryName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-containerregistry.Registry>
          description: ''
      return:
        type:
          - Promise<azure-arm-containerregistry.Registry>
    package: azure-arm-containerregistry
  - uid: azure-arm-containerregistry.Registries.get_2
    name: get
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the properties of the specified container registry.
    syntax:
      content: >-
        function get(resourceGroupName: string, registryName: string, options:
        function, callback: ServiceCallback<Registry>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: registryName
          type:
            - string
          description: ''
        - id: options
          type:
            - function
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-containerregistry.Registry>
          description: ''
      return:
        type:
          - Promise<azure-arm-containerregistry.Registry>
    package: azure-arm-containerregistry
  - uid: azure-arm-containerregistry.Registries.getWithHttpOperationResponse
    name: getWithHttpOperationResponse
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the properties of the specified container registry.
    syntax:
      content: >-
        function getWithHttpOperationResponse(resourceGroupName: string,
        registryName: string, options?: function)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group to which
            the container registry belongs.
        - id: registryName
          type:
            - string
          description: |
            The name of the container registry.
        - id: options
          type:
            - function
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-arm-containerregistry.Registry>>
    package: azure-arm-containerregistry
  - uid: azure-arm-containerregistry.Registries.importImage
    name: importImage
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Copies an image to this container registry from the specified container
      registry.
    syntax:
      content: >-
        function importImage(resourceGroupName: string, registryName: string,
        parameters: ImportImageParameters, options?: function)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group to which
            the container registry belongs.
        - id: registryName
          type:
            - string
          description: |
            The name of the container registry.
        - id: parameters
          type:
            - azure-arm-containerregistry.ImportImageParameters
          description: |
            The parameters specifying the image to copy and
            the source container registry.
        - id: options
          type:
            - function
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
    package: azure-arm-containerregistry
  - uid: azure-arm-containerregistry.Registries.importImage_1
    name: importImage
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Copies an image to this container registry from the specified container
      registry.
    syntax:
      content: >-
        function importImage(resourceGroupName: string, registryName: string,
        parameters: ImportImageParameters, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: registryName
          type:
            - string
          description: ''
        - id: parameters
          type:
            - azure-arm-containerregistry.ImportImageParameters
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-arm-containerregistry
  - uid: azure-arm-containerregistry.Registries.importImage_2
    name: importImage
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Copies an image to this container registry from the specified container
      registry.
    syntax:
      content: >-
        function importImage(resourceGroupName: string, registryName: string,
        parameters: ImportImageParameters, options: function, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: registryName
          type:
            - string
          description: ''
        - id: parameters
          type:
            - azure-arm-containerregistry.ImportImageParameters
          description: ''
        - id: options
          type:
            - function
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-arm-containerregistry
  - uid: >-
      azure-arm-containerregistry.Registries.importImageWithHttpOperationResponse
    name: importImageWithHttpOperationResponse
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Copies an image to this container registry from the specified container
      registry.
    syntax:
      content: >-
        function importImageWithHttpOperationResponse(resourceGroupName: string,
        registryName: string, parameters: ImportImageParameters, options?:
        function)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group to which
            the container registry belongs.
        - id: registryName
          type:
            - string
          description: |
            The name of the container registry.
        - id: parameters
          type:
            - azure-arm-containerregistry.ImportImageParameters
          description: |
            The parameters specifying the image to copy and
            the source container registry.
        - id: options
          type:
            - function
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
    package: azure-arm-containerregistry
  - uid: azure-arm-containerregistry.Registries.list
    name: list
    children: []
    type: method
    langs:
      - typeScript
    summary: Lists all the container registries under the specified subscription.
    syntax:
      content: 'function list(options?: function)'
      parameters:
        - id: options
          type:
            - function
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-containerregistry.RegistryListResult>
    package: azure-arm-containerregistry
  - uid: azure-arm-containerregistry.Registries.list_2
    name: list
    children: []
    type: method
    langs:
      - typeScript
    summary: Lists all the container registries under the specified subscription.
    syntax:
      content: >-
        function list(options: function, callback:
        ServiceCallback<RegistryListResult>)
      parameters:
        - id: options
          type:
            - function
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-containerregistry.RegistryListResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-containerregistry.RegistryListResult>
    package: azure-arm-containerregistry
  - uid: azure-arm-containerregistry.Registries.list_1
    name: list
    children: []
    type: method
    langs:
      - typeScript
    summary: Lists all the container registries under the specified subscription.
    syntax:
      content: 'function list(callback: ServiceCallback<RegistryListResult>)'
      parameters:
        - id: callback
          type:
            - ServiceCallback<azure-arm-containerregistry.RegistryListResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-containerregistry.RegistryListResult>
    package: azure-arm-containerregistry
  - uid: azure-arm-containerregistry.Registries.listByResourceGroup_1
    name: listByResourceGroup
    children: []
    type: method
    langs:
      - typeScript
    summary: Lists all the container registries under the specified resource group.
    syntax:
      content: >-
        function listByResourceGroup(resourceGroupName: string, callback:
        ServiceCallback<RegistryListResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-containerregistry.RegistryListResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-containerregistry.RegistryListResult>
    package: azure-arm-containerregistry
  - uid: azure-arm-containerregistry.Registries.listByResourceGroup
    name: listByResourceGroup
    children: []
    type: method
    langs:
      - typeScript
    summary: Lists all the container registries under the specified resource group.
    syntax:
      content: >-
        function listByResourceGroup(resourceGroupName: string, options?:
        function)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group to which
            the container registry belongs.
        - id: options
          type:
            - function
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-containerregistry.RegistryListResult>
    package: azure-arm-containerregistry
  - uid: azure-arm-containerregistry.Registries.listByResourceGroup_2
    name: listByResourceGroup
    children: []
    type: method
    langs:
      - typeScript
    summary: Lists all the container registries under the specified resource group.
    syntax:
      content: >-
        function listByResourceGroup(resourceGroupName: string, options:
        function, callback: ServiceCallback<RegistryListResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: options
          type:
            - function
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-containerregistry.RegistryListResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-containerregistry.RegistryListResult>
    package: azure-arm-containerregistry
  - uid: azure-arm-containerregistry.Registries.listByResourceGroupNext_1
    name: listByResourceGroupNext
    children: []
    type: method
    langs:
      - typeScript
    summary: Lists all the container registries under the specified resource group.
    syntax:
      content: >-
        function listByResourceGroupNext(nextPageLink: string, callback:
        ServiceCallback<RegistryListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-containerregistry.RegistryListResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-containerregistry.RegistryListResult>
    package: azure-arm-containerregistry
  - uid: azure-arm-containerregistry.Registries.listByResourceGroupNext_2
    name: listByResourceGroupNext
    children: []
    type: method
    langs:
      - typeScript
    summary: Lists all the container registries under the specified resource group.
    syntax:
      content: >-
        function listByResourceGroupNext(nextPageLink: string, options:
        function, callback: ServiceCallback<RegistryListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: ''
        - id: options
          type:
            - function
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-containerregistry.RegistryListResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-containerregistry.RegistryListResult>
    package: azure-arm-containerregistry
  - uid: azure-arm-containerregistry.Registries.listByResourceGroupNext
    name: listByResourceGroupNext
    children: []
    type: method
    langs:
      - typeScript
    summary: Lists all the container registries under the specified resource group.
    syntax:
      content: >-
        function listByResourceGroupNext(nextPageLink: string, options?:
        function)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - function
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-containerregistry.RegistryListResult>
    package: azure-arm-containerregistry
  - uid: >-
      azure-arm-containerregistry.Registries.listByResourceGroupNextWithHttpOperationResponse
    name: listByResourceGroupNextWithHttpOperationResponse
    children: []
    type: method
    langs:
      - typeScript
    summary: Lists all the container registries under the specified resource group.
    syntax:
      content: >-
        function listByResourceGroupNextWithHttpOperationResponse(nextPageLink:
        string, options?: function)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - function
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-arm-containerregistry.RegistryListResult>>
    package: azure-arm-containerregistry
  - uid: >-
      azure-arm-containerregistry.Registries.listByResourceGroupWithHttpOperationResponse
    name: listByResourceGroupWithHttpOperationResponse
    children: []
    type: method
    langs:
      - typeScript
    summary: Lists all the container registries under the specified resource group.
    syntax:
      content: >-
        function listByResourceGroupWithHttpOperationResponse(resourceGroupName:
        string, options?: function)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group to which
            the container registry belongs.
        - id: options
          type:
            - function
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-arm-containerregistry.RegistryListResult>>
    package: azure-arm-containerregistry
  - uid: azure-arm-containerregistry.Registries.listCredentials
    name: listCredentials
    children: []
    type: method
    langs:
      - typeScript
    summary: Lists the login credentials for the specified container registry.
    syntax:
      content: >-
        function listCredentials(resourceGroupName: string, registryName:
        string, options?: function)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group to which
            the container registry belongs.
        - id: registryName
          type:
            - string
          description: |
            The name of the container registry.
        - id: options
          type:
            - function
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-containerregistry.RegistryListCredentialsResult>
    package: azure-arm-containerregistry
  - uid: azure-arm-containerregistry.Registries.listCredentials_1
    name: listCredentials
    children: []
    type: method
    langs:
      - typeScript
    summary: Lists the login credentials for the specified container registry.
    syntax:
      content: >-
        function listCredentials(resourceGroupName: string, registryName:
        string, callback: ServiceCallback<RegistryListCredentialsResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: registryName
          type:
            - string
          description: ''
        - id: callback
          type:
            - >-
              ServiceCallback<azure-arm-containerregistry.RegistryListCredentialsResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-containerregistry.RegistryListCredentialsResult>
    package: azure-arm-containerregistry
  - uid: azure-arm-containerregistry.Registries.listCredentials_2
    name: listCredentials
    children: []
    type: method
    langs:
      - typeScript
    summary: Lists the login credentials for the specified container registry.
    syntax:
      content: >-
        function listCredentials(resourceGroupName: string, registryName:
        string, options: function, callback:
        ServiceCallback<RegistryListCredentialsResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: registryName
          type:
            - string
          description: ''
        - id: options
          type:
            - function
          description: ''
        - id: callback
          type:
            - >-
              ServiceCallback<azure-arm-containerregistry.RegistryListCredentialsResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-containerregistry.RegistryListCredentialsResult>
    package: azure-arm-containerregistry
  - uid: >-
      azure-arm-containerregistry.Registries.listCredentialsWithHttpOperationResponse
    name: listCredentialsWithHttpOperationResponse
    children: []
    type: method
    langs:
      - typeScript
    summary: Lists the login credentials for the specified container registry.
    syntax:
      content: >-
        function listCredentialsWithHttpOperationResponse(resourceGroupName:
        string, registryName: string, options?: function)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group to which
            the container registry belongs.
        - id: registryName
          type:
            - string
          description: |
            The name of the container registry.
        - id: options
          type:
            - function
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-arm-containerregistry.RegistryListCredentialsResult>>
    package: azure-arm-containerregistry
  - uid: azure-arm-containerregistry.Registries.listNext
    name: listNext
    children: []
    type: method
    langs:
      - typeScript
    summary: Lists all the container registries under the specified subscription.
    syntax:
      content: 'function listNext(nextPageLink: string, options?: function)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - function
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-containerregistry.RegistryListResult>
    package: azure-arm-containerregistry
  - uid: azure-arm-containerregistry.Registries.listNext_1
    name: listNext
    children: []
    type: method
    langs:
      - typeScript
    summary: Lists all the container registries under the specified subscription.
    syntax:
      content: >-
        function listNext(nextPageLink: string, callback:
        ServiceCallback<RegistryListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-containerregistry.RegistryListResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-containerregistry.RegistryListResult>
    package: azure-arm-containerregistry
  - uid: azure-arm-containerregistry.Registries.listNext_2
    name: listNext
    children: []
    type: method
    langs:
      - typeScript
    summary: Lists all the container registries under the specified subscription.
    syntax:
      content: >-
        function listNext(nextPageLink: string, options: function, callback:
        ServiceCallback<RegistryListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: ''
        - id: options
          type:
            - function
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-containerregistry.RegistryListResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-containerregistry.RegistryListResult>
    package: azure-arm-containerregistry
  - uid: azure-arm-containerregistry.Registries.listNextWithHttpOperationResponse
    name: listNextWithHttpOperationResponse
    children: []
    type: method
    langs:
      - typeScript
    summary: Lists all the container registries under the specified subscription.
    syntax:
      content: >-
        function listNextWithHttpOperationResponse(nextPageLink: string,
        options?: function)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - function
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-arm-containerregistry.RegistryListResult>>
    package: azure-arm-containerregistry
  - uid: azure-arm-containerregistry.Registries.listUsages_1
    name: listUsages
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the quota usages for the specified container registry.
    syntax:
      content: >-
        function listUsages(resourceGroupName: string, registryName: string,
        callback: ServiceCallback<RegistryUsageListResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: registryName
          type:
            - string
          description: ''
        - id: callback
          type:
            - >-
              ServiceCallback<azure-arm-containerregistry.RegistryUsageListResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-containerregistry.RegistryUsageListResult>
    package: azure-arm-containerregistry
  - uid: azure-arm-containerregistry.Registries.listUsages_2
    name: listUsages
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the quota usages for the specified container registry.
    syntax:
      content: >-
        function listUsages(resourceGroupName: string, registryName: string,
        options: function, callback: ServiceCallback<RegistryUsageListResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: registryName
          type:
            - string
          description: ''
        - id: options
          type:
            - function
          description: ''
        - id: callback
          type:
            - >-
              ServiceCallback<azure-arm-containerregistry.RegistryUsageListResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-containerregistry.RegistryUsageListResult>
    package: azure-arm-containerregistry
  - uid: azure-arm-containerregistry.Registries.listUsages
    name: listUsages
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the quota usages for the specified container registry.
    syntax:
      content: >-
        function listUsages(resourceGroupName: string, registryName: string,
        options?: function)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group to which
            the container registry belongs.
        - id: registryName
          type:
            - string
          description: |
            The name of the container registry.
        - id: options
          type:
            - function
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-containerregistry.RegistryUsageListResult>
    package: azure-arm-containerregistry
  - uid: azure-arm-containerregistry.Registries.listUsagesWithHttpOperationResponse
    name: listUsagesWithHttpOperationResponse
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the quota usages for the specified container registry.
    syntax:
      content: >-
        function listUsagesWithHttpOperationResponse(resourceGroupName: string,
        registryName: string, options?: function)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group to which
            the container registry belongs.
        - id: registryName
          type:
            - string
          description: |
            The name of the container registry.
        - id: options
          type:
            - function
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-arm-containerregistry.RegistryUsageListResult>>
    package: azure-arm-containerregistry
  - uid: azure-arm-containerregistry.Registries.listWithHttpOperationResponse
    name: listWithHttpOperationResponse
    children: []
    type: method
    langs:
      - typeScript
    summary: Lists all the container registries under the specified subscription.
    syntax:
      content: 'function listWithHttpOperationResponse(options?: function)'
      parameters:
        - id: options
          type:
            - function
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-arm-containerregistry.RegistryListResult>>
    package: azure-arm-containerregistry
  - uid: azure-arm-containerregistry.Registries.regenerateCredential
    name: regenerateCredential
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Regenerates one of the login credentials for the specified container
      registry.
    syntax:
      content: >-
        function regenerateCredential(resourceGroupName: string, registryName:
        string, regenerateCredentialParameters: RegenerateCredentialParameters,
        options?: function)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group to which
            the container registry belongs.
        - id: registryName
          type:
            - string
          description: |
            The name of the container registry.
        - id: regenerateCredentialParameters
          type:
            - azure-arm-containerregistry.RegenerateCredentialParameters
          description: |
            Specifies name of the
            password which should be regenerated -- password or password2.
        - id: options
          type:
            - function
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-containerregistry.RegistryListCredentialsResult>
    package: azure-arm-containerregistry
  - uid: azure-arm-containerregistry.Registries.regenerateCredential_1
    name: regenerateCredential
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Regenerates one of the login credentials for the specified container
      registry.
    syntax:
      content: >-
        function regenerateCredential(resourceGroupName: string, registryName:
        string, regenerateCredentialParameters: RegenerateCredentialParameters,
        callback: ServiceCallback<RegistryListCredentialsResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: registryName
          type:
            - string
          description: ''
        - id: regenerateCredentialParameters
          type:
            - azure-arm-containerregistry.RegenerateCredentialParameters
          description: ''
        - id: callback
          type:
            - >-
              ServiceCallback<azure-arm-containerregistry.RegistryListCredentialsResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-containerregistry.RegistryListCredentialsResult>
    package: azure-arm-containerregistry
  - uid: azure-arm-containerregistry.Registries.regenerateCredential_2
    name: regenerateCredential
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Regenerates one of the login credentials for the specified container
      registry.
    syntax:
      content: >-
        function regenerateCredential(resourceGroupName: string, registryName:
        string, regenerateCredentialParameters: RegenerateCredentialParameters,
        options: function, callback:
        ServiceCallback<RegistryListCredentialsResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: registryName
          type:
            - string
          description: ''
        - id: regenerateCredentialParameters
          type:
            - azure-arm-containerregistry.RegenerateCredentialParameters
          description: ''
        - id: options
          type:
            - function
          description: ''
        - id: callback
          type:
            - >-
              ServiceCallback<azure-arm-containerregistry.RegistryListCredentialsResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-containerregistry.RegistryListCredentialsResult>
    package: azure-arm-containerregistry
  - uid: >-
      azure-arm-containerregistry.Registries.regenerateCredentialWithHttpOperationResponse
    name: regenerateCredentialWithHttpOperationResponse
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Regenerates one of the login credentials for the specified container
      registry.
    syntax:
      content: >-
        function
        regenerateCredentialWithHttpOperationResponse(resourceGroupName: string,
        registryName: string, regenerateCredentialParameters:
        RegenerateCredentialParameters, options?: function)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group to which
            the container registry belongs.
        - id: registryName
          type:
            - string
          description: |
            The name of the container registry.
        - id: regenerateCredentialParameters
          type:
            - azure-arm-containerregistry.RegenerateCredentialParameters
          description: |
            Specifies name of the
            password which should be regenerated -- password or password2.
        - id: options
          type:
            - function
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-arm-containerregistry.RegistryListCredentialsResult>>
    package: azure-arm-containerregistry
  - uid: azure-arm-containerregistry.Registries.update
    name: update
    children: []
    type: method
    langs:
      - typeScript
    summary: Updates a container registry with the specified parameters.
    syntax:
      content: >-
        function update(resourceGroupName: string, registryName: string,
        registryUpdateParameters: RegistryUpdateParameters, options?: function)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group to which
            the container registry belongs.
        - id: registryName
          type:
            - string
          description: |
            The name of the container registry.
        - id: registryUpdateParameters
          type:
            - azure-arm-containerregistry.RegistryUpdateParameters
          description: |
            The parameters for updating a
            container registry.
        - id: options
          type:
            - function
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-containerregistry.Registry>
    package: azure-arm-containerregistry
  - uid: azure-arm-containerregistry.Registries.update_1
    name: update
    children: []
    type: method
    langs:
      - typeScript
    summary: Updates a container registry with the specified parameters.
    syntax:
      content: >-
        function update(resourceGroupName: string, registryName: string,
        registryUpdateParameters: RegistryUpdateParameters, callback:
        ServiceCallback<Registry>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: registryName
          type:
            - string
          description: ''
        - id: registryUpdateParameters
          type:
            - azure-arm-containerregistry.RegistryUpdateParameters
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-containerregistry.Registry>
          description: ''
      return:
        type:
          - Promise<azure-arm-containerregistry.Registry>
    package: azure-arm-containerregistry
  - uid: azure-arm-containerregistry.Registries.update_2
    name: update
    children: []
    type: method
    langs:
      - typeScript
    summary: Updates a container registry with the specified parameters.
    syntax:
      content: >-
        function update(resourceGroupName: string, registryName: string,
        registryUpdateParameters: RegistryUpdateParameters, options: function,
        callback: ServiceCallback<Registry>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: registryName
          type:
            - string
          description: ''
        - id: registryUpdateParameters
          type:
            - azure-arm-containerregistry.RegistryUpdateParameters
          description: ''
        - id: options
          type:
            - function
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-containerregistry.Registry>
          description: ''
      return:
        type:
          - Promise<azure-arm-containerregistry.Registry>
    package: azure-arm-containerregistry
  - uid: azure-arm-containerregistry.Registries.updateWithHttpOperationResponse
    name: updateWithHttpOperationResponse
    children: []
    type: method
    langs:
      - typeScript
    summary: Updates a container registry with the specified parameters.
    syntax:
      content: >-
        function updateWithHttpOperationResponse(resourceGroupName: string,
        registryName: string, registryUpdateParameters:
        RegistryUpdateParameters, options?: function)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group to which
            the container registry belongs.
        - id: registryName
          type:
            - string
          description: |
            The name of the container registry.
        - id: registryUpdateParameters
          type:
            - azure-arm-containerregistry.RegistryUpdateParameters
          description: |
            The parameters for updating a
            container registry.
        - id: options
          type:
            - function
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-arm-containerregistry.Registry>>
    package: azure-arm-containerregistry
references:
  - uid: azure-arm-containerregistry.Registry
    spec.typeScript:
      - name: Registry
        fullName: Registry
        uid: azure-arm-containerregistry.Registry
  - uid: Promise<azure-arm-containerregistry.Registry>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: Registry
        fullName: Registry
        uid: azure-arm-containerregistry.Registry
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-arm-containerregistry.Registry>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: Registry
        fullName: Registry
        uid: azure-arm-containerregistry.Registry
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-arm-containerregistry.Registry>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: Registry
        fullName: Registry
        uid: azure-arm-containerregistry.Registry
      - name: '>>'
        fullName: '>>'
  - uid: azure-arm-containerregistry.ImportImageParameters
    spec.typeScript:
      - name: ImportImageParameters
        fullName: ImportImageParameters
        uid: azure-arm-containerregistry.ImportImageParameters
  - uid: azure-arm-containerregistry.RegistryUpdateParameters
    spec.typeScript:
      - name: RegistryUpdateParameters
        fullName: RegistryUpdateParameters
        uid: azure-arm-containerregistry.RegistryUpdateParameters
  - uid: azure-arm-containerregistry.RegistryNameCheckRequest
    spec.typeScript:
      - name: RegistryNameCheckRequest
        fullName: RegistryNameCheckRequest
        uid: azure-arm-containerregistry.RegistryNameCheckRequest
  - uid: Promise<azure-arm-containerregistry.RegistryNameStatus>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: RegistryNameStatus
        fullName: RegistryNameStatus
        uid: azure-arm-containerregistry.RegistryNameStatus
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-arm-containerregistry.RegistryNameStatus>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: RegistryNameStatus
        fullName: RegistryNameStatus
        uid: azure-arm-containerregistry.RegistryNameStatus
      - name: '>'
        fullName: '>'
  - uid: >-
      Promise<HttpOperationResponse<azure-arm-containerregistry.RegistryNameStatus>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: RegistryNameStatus
        fullName: RegistryNameStatus
        uid: azure-arm-containerregistry.RegistryNameStatus
      - name: '>>'
        fullName: '>>'
  - uid: Promise<azure-arm-containerregistry.RegistryListResult>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: RegistryListResult
        fullName: RegistryListResult
        uid: azure-arm-containerregistry.RegistryListResult
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-arm-containerregistry.RegistryListResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: RegistryListResult
        fullName: RegistryListResult
        uid: azure-arm-containerregistry.RegistryListResult
      - name: '>'
        fullName: '>'
  - uid: >-
      Promise<HttpOperationResponse<azure-arm-containerregistry.RegistryListResult>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: RegistryListResult
        fullName: RegistryListResult
        uid: azure-arm-containerregistry.RegistryListResult
      - name: '>>'
        fullName: '>>'
  - uid: Promise<azure-arm-containerregistry.RegistryListCredentialsResult>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: RegistryListCredentialsResult
        fullName: RegistryListCredentialsResult
        uid: azure-arm-containerregistry.RegistryListCredentialsResult
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-arm-containerregistry.RegistryListCredentialsResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: RegistryListCredentialsResult
        fullName: RegistryListCredentialsResult
        uid: azure-arm-containerregistry.RegistryListCredentialsResult
      - name: '>'
        fullName: '>'
  - uid: >-
      Promise<HttpOperationResponse<azure-arm-containerregistry.RegistryListCredentialsResult>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: RegistryListCredentialsResult
        fullName: RegistryListCredentialsResult
        uid: azure-arm-containerregistry.RegistryListCredentialsResult
      - name: '>>'
        fullName: '>>'
  - uid: Promise<azure-arm-containerregistry.RegistryUsageListResult>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: RegistryUsageListResult
        fullName: RegistryUsageListResult
        uid: azure-arm-containerregistry.RegistryUsageListResult
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-arm-containerregistry.RegistryUsageListResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: RegistryUsageListResult
        fullName: RegistryUsageListResult
        uid: azure-arm-containerregistry.RegistryUsageListResult
      - name: '>'
        fullName: '>'
  - uid: >-
      Promise<HttpOperationResponse<azure-arm-containerregistry.RegistryUsageListResult>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: RegistryUsageListResult
        fullName: RegistryUsageListResult
        uid: azure-arm-containerregistry.RegistryUsageListResult
      - name: '>>'
        fullName: '>>'
  - uid: azure-arm-containerregistry.RegenerateCredentialParameters
    spec.typeScript:
      - name: RegenerateCredentialParameters
        fullName: RegenerateCredentialParameters
        uid: azure-arm-containerregistry.RegenerateCredentialParameters
